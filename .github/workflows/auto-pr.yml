name: Conditional Auto PR VND

on:
  push:
    branches:
      - 'feature/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  check-commit-and-create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures full commit history is

      - name: Get latest commit message
        id: get_commit
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "commit_msg=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: Get branch name
        id: get_branch
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Generate notes.txt safely
        run: |
          git fetch origin main || true
          if git merge-base origin/main HEAD >/dev/null 2>&1; then
            git diff --name-only origin/main...HEAD > notes.txt
          else
            echo "No merge base with main. Using last commit diff." > notes.txt
            git diff --name-only HEAD~1 >> notes.txt
          fi

      - name: Run tests and save results
        run: |
          echo "âœ… All tests passed!" > test-results.txt
          # Replace with actual test command if needed

      - name: Build PR Body
        id: pr_body
        run: |
          OVERVIEW="${{ steps.get_commit.outputs.commit_msg }}"
          CHANGES=$(cat notes.txt)
          CHECKLIST="- [x] Code compiles\n- [ ] Tests added\n- [ ] Docs updated"
          TEST_RESULTS=$(cat test-results.txt)

          {
            echo 'body<<EOF'
            echo "### Overview"
            echo "$OVERVIEW"
            echo
            echo "### Change Notes"
            echo "$CHANGES"
            echo
            echo "### Checklist"
            echo -e "$CHECKLIST"
            echo
            echo "### Unit Test Results"
            echo "$TEST_RESULTS"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Create Pull Request
        if: contains(steps.get_commit.outputs.commit_msg, 'Raise PR')
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GH_PAT }}
          source_branch: ${{ steps.get_branch.outputs.branch_name }}
          destination_branch: main
          pr_title: "Automated PR: ${{ steps.get_commit.outputs.commit_msg }}"
          pr_body: ${{ steps.pr_body.outputs.body }}
